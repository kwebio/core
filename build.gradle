buildscript {
    ext.kotlin_version = '1.1.1'
    ext.dokka_version = '0.9.9'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.10'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.4"
}

group 'io.kweb'
version '0.1.4'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.dokka'
apply plugin: "info.solidsoft.pitest"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
    }
    maven {
        url "http://dl.bintray.com/kotlin/ktor"
    }
    maven {
        url "http://dl.bintray.com/cy6ergn0m/maven"
    }
    maven {
        url 'https://jitpack.io'
    }
    jcenter()
}


configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}


dependencies {
    compile 'com.github.salomonbrys.kotson:kotson:2.3.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.12'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:0.12'

    compile ('org.jetbrains.ktor:ktor-core:0.3.0') {
        exclude group : 'ch.qos.logback', module : 'logback-classic'
    }
    compile ('org.jetbrains.ktor:ktor-netty:0.3.0') {
        exclude group : 'ch.qos.logback', module : 'logback-classic'
    }
    compile('org.jetbrains.ktor:ktor-websockets:0.3.0') {
        exclude group : 'ch.qos.logback', module : 'logback-classic'
    }

    compile('io.mola.galimatias:galimatias:0.2.0')

    compile 'io.github.microutils:kotlin-logging:1.4.2'
    // Libraries shouldn't include logger implementations
    // compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    compile("org.reflections:reflections:0.9.11")

    testCompile 'io.kotlintest:kotlintest:1.3.4'
    testCompile 'com.moodysalem:phantomjs-wrapper:3.0.0'
    testCompile 'com.moodysalem:phantomjs-wrapper-windows-binary:3.0.0'
    testCompile 'com.moodysalem:phantomjs-wrapper-linux-binary:3.0.0'
    testCompile 'com.moodysalem:phantomjs-wrapper-macosx-binary:3.0.0'

    // Should be compileOnly
    compileOnly 'com.github.HotswapProjects.HotswapAgent:hotswap-agent-core:1.1.0-SNAPSHOT'

}

// Needed because there's something messy with kotlin version numbers and dependencies
configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                details.useVersion "$kotlin_version"
            }
        }
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'html'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
}

